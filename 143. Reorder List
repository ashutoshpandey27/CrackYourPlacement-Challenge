/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {

    private:

    ListNode* reverse(ListNode*  root)
    {
        ListNode* curr = root , *prev = NULL;

        while(curr)
        {
            ListNode* next = curr->next;

            curr->next = prev;

            prev = curr;

            curr = next;
        }

        return prev;
    }
public:
    void reorderList(ListNode* head) {

        ListNode* slow = head , *fast = head;

        while(fast and fast->next)
        {
            slow = slow->next;

            fast = fast->next->next;
        }

        ListNode* curr1 = head, *curr2 = slow->next;

        slow->next = NULL;

        curr2 = reverse(curr2);

        while(curr1 and curr2)
        {
            ListNode* next1 = curr1->next;

            ListNode* next2 = curr2->next;

            curr1->next = curr2;

            curr2->next = next1;

            curr1 = next1;

            curr2 = next2;
    
        }

    }
};
