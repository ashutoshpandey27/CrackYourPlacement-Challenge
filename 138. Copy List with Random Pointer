/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {

        Node* newHead = NULL , *tail = NULL , *curr = head;

        unordered_map<Node* , Node*>mp;

        while(curr)
        {
            Node* temp = new Node(curr->val);

            mp[curr] = temp;

            if(!newHead)
            {
                newHead = tail = temp;
            }
            else
            {
                tail->next = temp;

                tail = tail->next;
            }

            curr = curr->next;
        }

        curr = head;

        Node* curr1 = newHead;

        while(curr)
        {
           
            curr1->random = mp[curr->random];

            curr = curr->next;

            curr1 = curr1->next;
        }

        return newHead;
        
    }
};
