class Solution {

    private:

    void dfs(int indx , vector<vector<int>>&stones , vector<bool>&vis , int n)
    {
        for(int i = 0 ; i < n ; i++)
        {
            int r = stones[i][0];

            int c = stones[i][1];

         if(vis[i] == false and (stones[indx][0] == r or stones[indx][1] == c))
         {
             vis[i] = true;

             dfs(i , stones , vis , n);
         }

        }

        return;
    }
public:
    int removeStones(vector<vector<int>>& stones) {

        int n = stones.size();

        vector<bool>vis(n , false);

        int cntGroups = 0;

        for(int i = 0 ; i < n ; i++)
        {
            if(vis[i] == false)
            {
                vis[i] = true;

                dfs(i , stones , vis , n);

                cntGroups++;
            }
        }

        return n - cntGroups;
        
    }
};
