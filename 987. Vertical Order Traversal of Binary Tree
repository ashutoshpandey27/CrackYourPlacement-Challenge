/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

    private:
             
             void solve(TreeNode* root , int row , int col , map<int , 
             vector<pair<int,int>>>&mp)
             {
                 if(root == NULL)
                  return;

                mp[col].push_back({row , root->val});

                solve(root->left , row + 1 , col - 1 , mp);

                solve(root->right , row + 1 , col + 1 , mp);
             }
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {

        vector<vector<int>>vot;

        if(root == NULL)
         return vot;

        map<int , vector<pair<int,int>>> mp;

        solve(root , 0 , 0 , mp);

        for(auto it : mp)
        {
            sort(it.second.begin() , it.second.end());

            vector<int>temp;

            for(auto p : it.second)
            {
                temp.push_back(p.second);
            }

            vot.push_back(temp);
        }

        return vot;
        
    }
};
