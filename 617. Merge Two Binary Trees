/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

    private:

    TreeNode* solve(TreeNode* root1 , TreeNode* root2)
    {
        if(!root1 and !root2)
            return NULL;

        if(root1 and !root2)
            return root1;

        if(!root1 and root2)
            return root2;

        root1->val += root2->val;

        root1->left = solve(root1->left , root2->left);

        root1->right = solve(root1->right , root2->right);

        return root1;

    }
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {

        return solve(root1 , root2);
        
    }
};
