class Solution {
public:
    int furthestBuilding(vector<int>& heights, int bricks, int ladders) {

        int n = heights.size() , indx = 0;

        priority_queue<int>pq;

        int i = 0;

        for( ; i < n - 1 ; i++)
        {
            if(heights[i+1] <= heights[i])
            {
                continue;
            }
            
                int diff = heights[i+1] - heights[i];

                if(bricks >= diff)
                {
                    bricks -= diff;

                    pq.push(diff);
                }
                else if(ladders > 0)
                {
                    if(!pq.empty())
                    {
                        if(diff < pq.top())
                        {
                            bricks += pq.top();

                            pq.pop();

                            bricks -= diff;

                            pq.push(diff);

                        }

                        ladders--;
                    }
                    else
                        ladders--;
                }
                else
                    break;
            
        }

        return i;
        
    }
};
