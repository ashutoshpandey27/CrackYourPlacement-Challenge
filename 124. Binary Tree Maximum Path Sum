/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

    private:

    int maxSum = -1e6;

    int solve(TreeNode* root)
    {
        if(!root)
            return 0;

        int leftSum = solve(root->left);

        int rightSum = solve(root->right);

        int maxSumBelow = leftSum + rightSum + root->val;

        int left_or_right = max(leftSum , rightSum) + root->val;

        int only_root = root->val;

        maxSum = max({maxSum , maxSumBelow , left_or_right , only_root});

        return max(left_or_right , only_root);
    }
public:
    int maxPathSum(TreeNode* root) {

        solve(root);

        return maxSum;
        
    }
};
