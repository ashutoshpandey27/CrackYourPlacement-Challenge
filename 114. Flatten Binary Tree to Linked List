/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

    private:

    // TreeNode* prev = NULL;

    // void solve(TreeNode* root)
    // {
    //     if(!root)
    //         return;

    //     solve(root->right);

    //     solve(root->left);

    //     root->right = prev;

    //     root->left = NULL;

    //     prev = root;
    // }
public:
    void flatten(TreeNode* root) {

        //** recursive approach

        // solve(root);

        // ** Iterative approach

        TreeNode* curr = root;

        while(curr)
        {
            if(curr->left)
            {
                TreeNode* currLeft = curr->left;

                while(currLeft->right)
                    currLeft = currLeft->right;

                currLeft->right = curr->right;

                curr->right = curr->left;

                curr->left = NULL;

            }

            curr = curr->right;
        }

    }
};
