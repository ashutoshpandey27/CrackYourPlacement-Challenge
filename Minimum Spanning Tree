 int spanningTree(int V, vector<vector<int>> adj[])
    {
        priority_queue<pair<int,int> , vector<pair<int,int>> , greater<pair<int,int>>>pq;
        
        bool visited[V];
        for(int i = 0 ; i < V ; i++)
        {
            visited[i] = false;
        }
        // {wt,node}
        pq.push({0,0});
        
        int sum = 0;
        
        while(!pq.empty())
        {
            auto it = pq.top();
            pq.pop();
            
            int node = it.second;
            int wt = it.first;
            
            if(visited[node])
            continue;
            
            visited[node] = true;
            sum += wt;
            
            for(auto it : adj[node])
            {
                int adjNode = it[0];
                int Wt = it[1];
                
                if(!visited[adjNode])
                {
                    pq.push({Wt,adjNode});
                }
            }
        }
        
        return sum;
    }
