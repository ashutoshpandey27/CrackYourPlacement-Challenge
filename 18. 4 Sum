class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {

        int n = nums.size();

        sort(begin(nums) , end(nums));

        vector<vector<int>>ans;

        for(int i = 0; i < n-3; i++)
        {
            if(i > 0 and (nums[i] == nums[i-1]))
                continue;

            long long sum = target - nums[i];

            for(int j = i + 1; j < n - 2 ; j++)
            {
                if(j > (i+1) and (nums[j] == nums[j-1]))
                    continue;

                long long sum1 = sum - nums[j];

                int k = j + 1 , l = n - 1;

                while(k < l)
                {

                    if((long long)(nums[k] + nums[l]) == sum1)
                    {
                        ans.push_back({nums[i] , nums[j] , nums[k] , 
                        nums[l]});

                        k++;

                        l--;

                        while(k < l and (nums[k] == nums[k-1]))
                            k++;

                        while(k < l and (nums[l] == nums[l+1]))
                            l--;

                    }
                    else if((long long)(nums[k] + nums[l]) > sum1)
                        l--;
                    else
                        k++;
                }
            }
        }

        return ans;
        
    }
};
