class Solution {

    int  m , n;

    void dfs(vector<vector<int>>&image , int scol , int row , int col , 
    int color , int delRow[] , int delCol[] )
    {
        if(image[row][col] == scol)
        {
            image[row][col] = color;
        }

        for(int i = 0 ; i < 4 ; i++)
        {
            int nrow = row + delRow[i];
            int ncol = col + delCol[i];

            if(nrow >= 0 and nrow < m and ncol >= 0 and ncol < n and 
            image[nrow][ncol] == scol )
            {
                   dfs(image , scol , nrow , ncol , color , delRow , 
                   delCol);
            }
        }


    }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {


         m = image.size() ;
         n = image[0].size();

        int delRow[4] = {-1 , 0 , 1 , 0};
        int delCol[4] = {0 , 1 , 0 , -1};

        if(image[sr][sc] == color)
            return image;

        int scol = image[sr][sc];

        dfs(image , scol , sr , sc , color , delRow , delCol);

        return image;
        
    }
};
