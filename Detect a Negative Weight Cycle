class Solution {
public:
	int isNegativeWeightCycle(int n, vector<vector<int>>edges){
	    
	   // edge case 
	    if(edges.size() == 0)
	    return 0;
	   
	   vector<int>dist(n,1e9);
	   
	   int src = edges[0][0];
	   
	   dist[src] = 0;
	   
	   // perform relax operation n-1 times
	   for(int i = 0 ; i < n-1 ; i++)
	   {
	       for(auto it : edges)
	       {
	           int u = it[0];
	           int v = it[1];
	           int wt = it[2];
	           
	           if(dist[u] != 1e9 and dist[v] > dist[u] + wt)
	           {
	               dist[v] = dist[u] + wt;
	           }
	       }
	   }
	   
	   // if there is still exist relax operation that means there is a negative cycle
	   for(auto it : edges)
	   {
	       int u = it[0];
	       int v = it[1];
	       int wt = it[2];
	       
	       if(dist[u] != 1e9 and dist[v] > dist[u] + wt)
	       {
	           return 1;
	       }
	   }
	   
	   return 0;
	}
};
