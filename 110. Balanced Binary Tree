/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

    private:

    pair<int , bool> solve(TreeNode* root)
    {
        if(!root)
            return {0 , true};

        auto leftAns = solve(root->left);

        auto rightAns = solve(root->right);

        if(abs(leftAns.first - rightAns.first) > 1)
            return {max(leftAns.first , rightAns.first) + 1 , false};
        
        return {max(leftAns.first , rightAns.first) + 1 , 
        leftAns.second and rightAns.second};
    }
public:
    bool isBalanced(TreeNode* root) {

        return solve(root).second;
        
    }
};
