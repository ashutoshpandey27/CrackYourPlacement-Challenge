/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

 #define ll unsigned long long 
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {

        queue<pair<TreeNode* , ll>>q;

        q.push({root , 0});

        ll maxWidth = 0;

        while(!q.empty())
        {
            ll size = q.size();

            ll width = q.back().second - q.front().second + 1;

            maxWidth = max(maxWidth , width);

            while(size--)
            {
                TreeNode* node = q.front().first;

                ll indx = q.front().second;

                q.pop();

                if(node->left)
                    q.push({node->left , 2*indx + 1});

                if(node->right)
                    q.push({node->right , 2*indx + 2});
            }
        }

        return (int)maxWidth;
        
    }
};
