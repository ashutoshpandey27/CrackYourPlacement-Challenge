class Solution {
public:
	bool isPossible(int N, vector<pair<int, int> >& prerequisites) {
	    
	    vector<int>adj[N];
	    
	    vector<int>in_degree(N,0);
	    
	    for(auto it : prerequisites)
	    {
	        int u = it.second;
	        int v = it.first;
	        
	        adj[u].push_back(v);
	        in_degree[v]++;
	    }
	    
	    queue<int>q;
	    
	    for(int i = 0 ; i < N ; i++)
	    {
	        if(in_degree[i] == 0)
	        {
	            q.push(i);
	        }
	    }
	    
	    int cnt = 0;
	    
	    while(!q.empty())
	    {
	        int node = q.front();
	        q.pop();
	        cnt++;
	        
	        for(auto it : adj[node])
	        {
	            if(--in_degree[it] == 0)
	            {
	                q.push(it);
	            }
	        }
	    }
	    
	    return cnt == N;
	}
};
