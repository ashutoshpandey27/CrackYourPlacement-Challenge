/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {

        TreeNode* curr = root;

        vector<int>in;

        while(curr)
        {
            if(!curr->left)
            {
                in.push_back(curr->val);

                curr = curr->right;
            }
            else
            {
                TreeNode* leftChild = curr->left;

                while(leftChild->right)
                {
                    leftChild = leftChild->right;
                }

                leftChild->right = curr;

                TreeNode* temp = curr;

                curr = curr->left;

                temp->left = NULL;
            }
        }

        return in;
        
    }
};
